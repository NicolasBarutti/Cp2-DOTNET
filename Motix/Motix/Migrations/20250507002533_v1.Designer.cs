// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Motix.API.Infrastructure.Context;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Motix.Migrations
{
    [DbContext(typeof(MotixContext))]
    [Migration("20250507002533_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Motix.API.Domain.Motorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Chassis")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("LicensePlate")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.Property<int>("SectorId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("SectorId");

                    b.ToTable("Motorcycles", (string)null);
                });

            modelBuilder.Entity("Motix.API.Domain.Movement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DestinationSectorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("MotorcycleId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("OriginSectorId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("DestinationSectorId");

                    b.HasIndex("MotorcycleId");

                    b.HasIndex("OriginSectorId");

                    b.ToTable("Movements", (string)null);
                });

            modelBuilder.Entity("Motix.API.Domain.Sector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<int>("YardId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("YardId");

                    b.ToTable("Sectors", (string)null);
                });

            modelBuilder.Entity("Motix.API.Domain.Yard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.HasKey("Id");

                    b.ToTable("Yards", (string)null);
                });

            modelBuilder.Entity("Motix.API.Domain.Motorcycle", b =>
                {
                    b.HasOne("Motix.API.Domain.Sector", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Motix.API.Domain.Movement", b =>
                {
                    b.HasOne("Motix.API.Domain.Sector", "DestinationSector")
                        .WithMany()
                        .HasForeignKey("DestinationSectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Motix.API.Domain.Motorcycle", "Motorcycle")
                        .WithMany()
                        .HasForeignKey("MotorcycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Motix.API.Domain.Sector", "OriginSector")
                        .WithMany()
                        .HasForeignKey("OriginSectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinationSector");

                    b.Navigation("Motorcycle");

                    b.Navigation("OriginSector");
                });

            modelBuilder.Entity("Motix.API.Domain.Sector", b =>
                {
                    b.HasOne("Motix.API.Domain.Yard", "Yard")
                        .WithMany("Sectors")
                        .HasForeignKey("YardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yard");
                });

            modelBuilder.Entity("Motix.API.Domain.Yard", b =>
                {
                    b.Navigation("Sectors");
                });
#pragma warning restore 612, 618
        }
    }
}
